/*You have been given a string STR. Your task is to find the total number of palindromic substrings of STR.
Example :
If the input string is "abbc", then all the possible palindromic substrings would be: ["a", "b", "b", c", "bb"] 
and hence, the output will be 5 since we have 5 substrings in total which form a palindrome.*/

#include<iostream>
#include<algorithm>
using namespace std;

bool IsPalindrome(string &str)
{
    int iLength = str.length();
    int iCnt = 0;

    for(iCnt = 0; iCnt < iLength; iCnt++)
    {
        if(str[iCnt] != str[iLength - iCnt -1])
        {
            return false;
        }
    }
    return true;
}

int palindromicSubstrings(string str)
{
    int iCountStr = 0;
    int iCountP = 0;
    int iCnt = 0;
    int jCnt = 0;
    int iLength = str.length();

    for(iCnt = 0; iCnt < iLength; iCnt++)
    {   
        string temp = "";
        for(jCnt = iCnt; jCnt <= iLength - 1; jCnt++)
        {
            temp = temp + str[jCnt];  //Building the substring

            if(IsPalindrome(temp))
            {
                iCountP++;
            }
        }
    }
    return iCountP;
}

int main()
{
    string text = "";
    int iRet = 0;
    iRet = palindromicSubstrings(text);

    printf("%d\n", iRet);
}